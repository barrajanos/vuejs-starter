{"remainingRequest":"/Users/admin/Documents/GitHub/empyr/vuejs-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Documents/GitHub/empyr/vuejs-starter/src/views/Landing.vue?vue&type=template&id=a8baa566&","dependencies":[{"path":"/Users/admin/Documents/GitHub/empyr/vuejs-starter/src/views/Landing.vue","mtime":1603282383718},{"path":"/Users/admin/Documents/GitHub/empyr/vuejs-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Documents/GitHub/empyr/vuejs-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Documents/GitHub/empyr/vuejs-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Documents/GitHub/empyr/vuejs-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}